name: Step 1 # Verify Title Change

on:
  push:
    branches:
      - main

permissions:
  contents: read
  actions: write
  issues: write

env:
  STEP_2_FILE: ".github/steps/2-delete.md"

jobs:
  find_exercise:
    name: Find Exercise Issue
    uses: skills/exercise-toolkit/.github/workflows/find-exercise-issue.yml@v0.4.0

  check_step_work:
    name: Check step work
    runs-on: ubuntu-latest
    needs: [find_exercise]
    env:
      ISSUE_URL: ${{ needs.find_exercise.outputs.issue-url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get response templates
        uses: actions/checkout@v4
        with:
          repository: skills/exercise-toolkit
          path: exercise-toolkit
          ref: v0.4.0

      - name: Update comment - checking work
        run: |
          gh issue comment "$ISSUE_URL" \
            --body-file exercise-toolkit/markdown-templates/step-feedback/checking-work.md \
            --edit-last
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # START: Check practical exercise

      - name: Check for Hello World title
        id: check-hello-world-title
        continue-on-error: true
        uses: skills/action-keyphrase-checker@v1
        with:
          text-file: packages/frontend/src/App.js
          keyphrase: '"Hello World"'
          minimum-occurrences: 1
          case-sensitive: false

      - name: Build message - step results
        id: build-message-step-results
        uses: skills/action-text-variables@v2
        with:
          template-file: exercise-toolkit/markdown-templates/step-feedback/step-results-table.md
          template-vars: |
            step_number: 2
            passed: ${{ !contains(steps.*.outcome, 'failure') }}
            results_table:
              - description: "ðŸŽ‰ Great job! You've successfully changed the title to 'Hello World' using GitHub Copilot Agent with Claude 3.7 Sonnet. You've completed the first step of the bootcamp!"
                passed: ${{ steps.check-additional-activities.outcome == 'success' }}

      - name: Create comment - step results
        run: |
          gh issue comment "$ISSUE_URL" \
            --body "$COMMENT_BODY" \
            --edit-last
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COMMENT_BODY: ${{ steps.build-message-step-results.outputs.updated-text }}

      - name: Fail job if not all checks passed
        if: contains(steps.*.outcome, 'failure')
        run: exit 1

      # END: Check practical exercise

      - name: Build message - step finished
        id: build-message-step-finish
        uses: skills/action-text-variables@v2
        with:
          template-file: exercise-toolkit/markdown-templates/step-feedback/step-finished-prepare-next-step.md
          template-vars: |
            next_step_number: 2

      - name: Update comment - step finished
        run: |
          gh issue comment "$ISSUE_URL" \
            --body "$ISSUE_BODY" \
            --edit-last
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_BODY: ${{ steps.build-message-step-finish.outputs.updated-text }}

  post_next_step_content:
    name: Post next step content
    needs: [find_exercise, check_step_work]
    runs-on: ubuntu-latest
    env:
      ISSUE_URL: ${{ needs.find_exercise.outputs.issue-url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get response templates
        uses: actions/checkout@v4
        with:
          repository: skills/exercise-toolkit
          path: exercise-toolkit
          ref: v0.4.0

      - name: Create comment - add step content
        run: |
          gh issue comment "$ISSUE_URL" \
            --body-file "$STEP_2_FILE"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create comment - watching for progress
        run: |
          gh issue comment "$ISSUE_URL" \
            --body-file exercise-toolkit/markdown-templates/step-feedback/watching-for-progress.md
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Disable current workflow and enable next one
        run: |
          gh workflow disable "Step 1"
          gh workflow enable "Step 2"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}








      # - name: Check for "Hello World" title
      #   id: check_title
      #   run: |
      #     title_check=$(grep -l "Hello World" packages/frontend/src/App.js || echo "")
      #     if [ -n "$title_check" ]; then
      #       echo "Title changed successfully! Found 'Hello World' in App.js"
      #       echo "title_changed=true" >> $GITHUB_OUTPUT
      #     else
      #       echo "Title not changed. Could not find 'Hello World' in App.js"
      #       echo "title_changed=false" >> $GITHUB_OUTPUT
      #     fi

      # - name: Update issue if title changed
      #   if: steps.check_title.outputs.title_changed == 'true'
      #   run: |
      #     issue_number=$(gh issue list --label "bootcamp" --json number --jq '.[0].number')
      #     if [ -n "$issue_number" ]; then
      #       gh issue comment $issue_number --body "ðŸŽ‰ Great job! You've successfully changed the title to 'Hello World' using GitHub Copilot Agent with Claude 3.7 Sonnet. You've completed the first step of the bootcamp!"
      #     fi
      #   env:
      #     GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
